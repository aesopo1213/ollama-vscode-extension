{
  "name": "vscode-ollama",
  "displayName": "Ollama for VS Code",
  "description": "Run Ollama language models locally within VS Code with MCP server support",
  "version": "1.0.0",
  "publisher": "ollama-vscode",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "Machine Learning",
    "Other",
    "Snippets"
  ],
  "keywords": [
    "ollama",
    "ai",
    "llm",
    "language-model",
    "chat",
    "mcp",
    "model-context-protocol"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/vscode-ollama.git"
  },
  "homepage": "https://github.com/your-username/vscode-ollama#readme",
  "bugs": {
    "url": "https://github.com/your-username/vscode-ollama/issues"
  },
  "license": "MIT",
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "vscode-ollama.setup",
        "title": "Ollama: Setup"
      },
      {
        "command": "vscode-ollama.startOllama",
        "title": "Ollama: Start"
      },
      {
        "command": "vscode-ollama.startChat",
        "title": "Ollama: Start New Chat"
      },
      {
        "command": "vscode-ollama.openChatHistory",
        "title": "Ollama: Open Chat History"
      },
      {
        "command": "vscode-ollama.deleteChatHistory",
        "title": "Ollama: Delete Selected Chats",
        "icon": "$(trash)"
      },
      {
        "command": "vscode-ollama.renameChat",
        "title": "Ollama: Rename Chat"
      },
      {
        "command": "vscode-ollama.generateFromSelection",
        "title": "Ollama: Generate from Selection"
      },
      {
        "command": "vscode-ollama.refreshModels",
        "title": "Ollama: Refresh Models",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-ollama.configureMcpServer",
        "title": "Ollama: Configure MCP Server"
      },
      {
        "command": "vscode-ollama.refreshMcpServers",
        "title": "Ollama: Refresh MCP Servers",
        "icon": "$(refresh)"
      },
      {
        "command": "vscode-ollama.addMcpServer",
        "title": "Ollama: Add MCP Server",
        "icon": "$(add)"
      },
      {
        "command": "vscode-ollama.removeMcpServer",
        "title": "Ollama: Remove Selected MCP Servers",
        "icon": "$(remove)"
      },
      {
        "command": "vscode-ollama.startMcpServer",
        "title": "Ollama: Start MCP Server"
      },
      {
        "command": "vscode-ollama.stopMcpServer",
        "title": "Ollama: Stop MCP Server"
      },
      {
        "command": "vscode-ollama.testMcpServer",
        "title": "Ollama: Test MCP Server"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ollama-sidebar",
          "title": "Ollama",
          "icon": "$(hubot)"
        }
      ]
    },
    "views": {
      "ollama-sidebar": [
        {
          "id": "ollamaModelsView",
          "name": "Models",
          "icon": "media/models.svg"
        },
        {
          "id": "ollamaChatsView",
          "name": "Chat History",
          "icon": "media/chats.svg"
        },
        {
          "id": "ollamaMcpView",
          "name": "MCP Servers",
          "icon": "media/mcp.svg"
        }
      ]
    },
    "menus": {
      "editor/context": [
        {
          "command": "vscode-ollama.generateFromSelection",
          "when": "editorHasSelection",
          "group": "navigation"
        }
      ],
      "view/title": [
        {
          "command": "vscode-ollama.refreshModels",
          "when": "view == ollamaModelsView",
          "group": "navigation"
        },
        {
          "command": "vscode-ollama.deleteChatHistory",
          "when": "view == ollamaChatsView && ollamaChatsView:selected",
          "group": "navigation@1"
        },
        {
          "command": "vscode-ollama.refreshMcpServers",
          "when": "view == ollamaMcpView",
          "group": "navigation@1"
        },
        {
          "command": "vscode-ollama.addMcpServer",
          "when": "view == ollamaMcpView",
          "group": "navigation@2"
        },
        {
          "command": "vscode-ollama.removeMcpServer",
          "when": "view == ollamaMcpView && ollamaMcpView:selected",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "vscode-ollama.renameChat",
          "when": "view == ollamaChatsView && viewItem == chatHistory",
          "group": "navigation@1"
        },
        {
          "command": "vscode-ollama.deleteChatHistory",
          "when": "view == ollamaChatsView && ollamaChatsView:selected",
          "group": "navigation@2"
        },
        {
          "command": "vscode-ollama.removeMcpServer",
          "when": "view == ollamaMcpView && ollamaMcpView:selected",
          "group": "navigation@2"
        },
        {
          "command": "vscode-ollama.startMcpServer",
          "when": "view == ollamaMcpView && viewItem == mcpServer.stopped",
          "group": "navigation@3"
        },
        {
          "command": "vscode-ollama.stopMcpServer",
          "when": "view == ollamaMcpView && viewItem == mcpServer.running",
          "group": "navigation@4"
        },
        {
          "command": "vscode-ollama.testMcpServer",
          "when": "view == ollamaMcpView && viewItem =~ /mcpServer\\.(running|stopped)/",
          "group": "navigation@5"
        }
      ]
    },
    "keybindings": [
      {
        "command": "vscode-ollama.deleteChatHistory",
        "key": "ctrl+shift+delete",
        "mac": "cmd+shift+delete",
        "when": "view == ollamaChatsView && ollamaChatsView:selected"
      },
      {
        "command": "vscode-ollama.removeMcpServer",
        "key": "ctrl+shift+delete",
        "mac": "cmd+shift+delete",
        "when": "view == ollamaMcpView && ollamaMcpView:selected"
      }
    ],
    "configuration": {
      "title": "Ollama",
      "properties": {
        "vscode-ollama.enableDebugLogs": {
          "type": "boolean",
          "default": true,
          "description": "Enable Debug Log"
        },
        "vscode-ollama.enableErrorStackTraces": {
          "type": "boolean",
          "default": false,
          "description": "Include stack traces in error logs. If unset, defaults to enableDebugLogs."
        },
        "vscode-ollama.productionMode": {
          "type": "boolean",
          "default": false,
          "description": "Enable production mode to suppress info, warn, and debug logs, allowing only error logs."
        },
        "vscode-ollama.apiHost": {
          "type": "string",
          "default": "localhost",
          "description": "Base Host for the Ollama API"
        },
        "vscode-ollama.apiPort": {
          "type": "string",
          "default": "11434",
          "description": "Base Port for the Ollama API"
        },
        "vscode-ollama.defaultModel": {
          "type": "string",
          "default": "llama2",
          "description": "Default model to use for new chats"
        },
        "vscode-ollama.showStreamingOutput": {
          "type": "boolean",
          "default": true,
          "description": "Show streaming output in real-time"
        },
        "vscode-ollama.mcpServers": {
          "type": "array",
          "default": [],
          "description": "Configured MCP servers",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "stdio",
                  "sse"
                ]
              },
              "command": {
                "type": "string"
              },
              "args": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "env": {
                "type": "object"
              },
              "url": {
                "type": "string"
              },
              "headers": {
                "type": "object"
              }
            }
          }
        },
        "vscode-ollama.mcpTimeout": {
          "type": "number",
          "default": 10000,
          "description": "MCP request timeout in milliseconds"
        },
        "vscode-ollama.mcpRetryAttempts": {
          "type": "number",
          "default": 3,
          "description": "Number of retry attempts for failed MCP requests"
        },
        "vscode-ollama.mcpAutoStart": {
          "type": "boolean",
          "default": false,
          "description": "Automatically start configured MCP servers on extension activation"
        },
        "vscode-ollama.mcpLogLevel": {
          "type": "string",
          "default": "info",
          "enum": [
            "debug",
            "info",
            "warn",
            "error"
          ],
          "description": "Log level for MCP operations"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "package": "cross-env NODE_ENV=production webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src --ext ts",
    "lint:fix": "eslint src --ext ts --fix",
    "clean": "rimraf dist out",
    "build": "npm run clean && npm run compile",
    "build:prod": "npm run clean && npm run package",
    "dev": "npm run watch",
    "test": "node test/simple-test.js",
    "test:unit": "jest --testPathPatterns=test/unit",
    "test:integration": "jest --testPathPatterns=test/integration",
    "test:full": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/jest": "^30.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.2.5",
    "@types/sinon": "^17.0.2",
    "@types/vscode": "^1.85.0",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-electron": "^2.3.2",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "jest": "^30.1.2",
    "mocha": "^10.2.0",
    "rimraf": "^5.0.0",
    "sinon": "^17.0.1",
    "ts-jest": "^29.4.1",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.99.9",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "axios": "^1.6.0",
    "cross-env": "^10.0.0",
    "vscode-languageclient": "^8.1.0"
  }
}